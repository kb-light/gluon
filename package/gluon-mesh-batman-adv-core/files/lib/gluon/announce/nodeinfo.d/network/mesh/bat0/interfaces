local batman_adv = require 'gluon.batman_adv'

local wireless = {}
local tunnel = {}
local other = {}

local function get_address(t, ifname)
  pcall(
    function()
      table.insert(t, util.readline(io.open('/sys/class/net/' .. ifname .. '/address')))
    end
  )
end

local function file_exists(filename)
  local f = io.open(filename)
  if f == nil then
    return false
  else
    f:close()
    return true
  end
end

local function is_wireless(ifname)
  return file_exists('/sys/class/net/' .. ifname .. '/wireless')
end

local function is_tuntap(ifname)
  return file_exists('/sys/class/net/' .. ifname .. '/tun_flags')
end

local function nil_table(t)
  if next(t) ~= nil then
    return t
  else
    return nil
  end
end

for ifname in batman_adv.interfaces('bat0') do
  if is_wireless(ifname) then
    get_address(wireless, ifname)
  elseif is_tuntap(ifname) then
    get_address(tunnel, ifname)
  else
    get_address(other, ifname)
  end
end

return {
  wireless = nil_table(wireless),
  tunnel = nil_table(tunnel),
  other = nil_table(other),
  [{}] = true
}
